% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/funfea.R
\name{go_enrichment}
\alias{go_enrichment}
\title{Calculate GO Enrichment}
\usage{
go_enrichment(
  go_model,
  protein_ids,
  test = "fisher",
  p.adjust.method = "BH",
  reduce_redundancy_by_ancestor = FALSE,
  max_ancestor_depth = 5
)
}
\arguments{
\item{go_model}{A list of dataframes with GO terms background frequencies per GO term type (see create_go_model)}

\item{protein_ids}{A vector of protein IDs. Must match the Protein IDs from the annotation used to build the model.}

\item{test}{A statistical method for testing the null of independence of rows and columns in a contingency table (default = "fisher"; options = c("fisher", "chisq))}

\item{p.adjust.method}{A statistical method to adjust p-values for multiple comparisons (default = "BH"; options = c("holm", "hochberg", "hommel", "bonferroni", "BH", "BY", "fdr", "none")(see p.adjust.methods))}

\item{reduce_redundancy_by_ancestor}{A method to remove enriched GO terms that are ancestors of other enriched terms to reduce redundancy and retain the most specific, informative terms. (default = FALSE; options = c(TRUE, FALSE))}

\item{max_ancestor_depth}{Maximum distance (in terms of graph depth) allowed between a GO term and its descendant when applying redundancy reduction; higher values allow removal of more distant ancestor terms. (default = 5)}
}
\value{
A list of dataframes with GO terms enrichment statistics per GO term type
}
\description{
This function generates a dataframe containing background/sample frequencies and enrichment statistics per GO term from a GO model and a vector of protein IDs. Protein IDs must match the Protein IDs from the annotation used to build the model.
}
\examples{
go_enrichment_df <- go_enrichment(go_model_df, protein_ids)
go_enrichment_df <- go_enrichment(go_model_df, protein_ids, test = "fisher", p.adjust.method = "BH")
go_enrichment_df <- go_enrichment(go_model_df, protein_ids, test = "chisq", p.adjust.method = "bonferroni")
go_enrichment_df <- go_enrichment(go_model_df, protein_ids, test = "fisher", p.adjust.method = "BH", reduce_redundancy_by_ancestor = TRUE, max_ancestor_depth = 5)
}
